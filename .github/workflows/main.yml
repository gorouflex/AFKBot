name: CL

on:
  push:
    branches:
      - main

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build AFKBot.py to exe
      run: |
        pyinstaller --onefile --windowed AFKBot-Beta/AFKBot.py
        mv dist/AFKBot.exe ./AFKBot.exe

    - name: Build UpdaterV4.0.1.py to exe
      run: |
        pyinstaller --onefile --windowed AFKBot-Beta/UpdaterV4.0.1.py
        mv dist/UpdaterV4.0.1.exe ./UpdaterV4.0.1.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows-artifacts
        path: |
          ./AFKBot.exe
          ./UpdaterV4.0.1.exe

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build AFKBot.py to app
      run: |
        pyinstaller --onefile --windowed AFKBot-Beta/AFKBot.py
        mv dist/AFKBot ./AFKBot.app

    - name: Build UpdaterV4.0.1.py to app
      run: |
        pyinstaller --onefile --windowed AFKBot-Beta/UpdaterV4.0.1.py
        mv dist/UpdaterV4.0.1 ./UpdaterV4.0.1.app

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: macos-artifacts
        path: |
          ./AFKBot.app
          ./UpdaterV4.0.1.app

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0

    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v2

    - name: Move artifacts to current directory
      run: |
        mv windows-artifacts/* .
        mv macos-artifacts/* .

    - name: Set release tag and title
      id: set_release_tag_title
      run: |
        echo "::set-output name=release_tag::4.2.0-Beta"
        echo "::set-output name=release_title::4.2.0 Beta"
      shell: bash

    - name: Set up Git
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Update release
      run: |
        commit_history=$(git log -5 --graph --oneline)

        if gh release view "${{ steps.set_release_tag_title.outputs.release_tag }}" &>/dev/null; then
          gh release delete "${{ steps.set_release_tag_title.outputs.release_tag }}" --yes
        fi

        gh release create "${{ steps.set_release_tag_title.outputs.release_tag }}" ./AFKBot.exe ./UpdaterV4.0.1.exe ./AFKBot.app ./UpdaterV4.0.1.app --title "${{ steps.set_release_tag_title.outputs.release_title }}" --prerelease --notes "### Beta version is not recommended to use, only for testing purpose!
        ### Latest commits :  
        $commit_history"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
